"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DummyTokenOwnable__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "allowance",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "needed",
                type: "uint256",
            },
        ],
        name: "ERC20InsufficientAllowance",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "needed",
                type: "uint256",
            },
        ],
        name: "ERC20InsufficientBalance",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "approver",
                type: "address",
            },
        ],
        name: "ERC20InvalidApprover",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
        ],
        name: "ERC20InvalidReceiver",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "ERC20InvalidSender",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "ERC20InvalidSpender",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "burnFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50336040518060400160405280600581526020016444756d6d7960d81b8152506040518060400160405280600381526020016211135560ea1b81525081600390816200005e9190620003b7565b5060046200006d8282620003b7565b5050506000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b81526004016000604051808303816000875af1158015620000b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000dd919081019062000483565b806020019051810190620000f2919062000558565b90506200010a8169152d02c7e14af68000006200014d565b506001600160a01b0381166200013b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000146816200018b565b50620005b2565b6001600160a01b038216620001795760405163ec442f0560e01b81526000600482015260240162000132565b6200018760008383620001dd565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166200020c5780600260008282546200020091906200058a565b90915550620002809050565b6001600160a01b03831660009081526020819052604090205481811015620002615760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000132565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200029e57600280548290039055620002bd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200030391815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200033b57607f821691505b6020821081036200035c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003b2576000816000526020600020601f850160051c810160208610156200038d5750805b601f850160051c820191505b81811015620003ae5782815560010162000399565b5050505b505050565b81516001600160401b03811115620003d357620003d362000310565b620003eb81620003e4845462000326565b8462000362565b602080601f8311600181146200042357600084156200040a5750858301515b600019600386901b1c1916600185901b178555620003ae565b600085815260208120601f198616915b82811015620004545788860151825594840194600190910190840162000433565b5085821015620004735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083850312156200049757600080fd5b82516001600160401b0380821115620004af57600080fd5b818501915085601f830112620004c457600080fd5b815181811115620004d957620004d962000310565b604051601f8201601f19908116603f0116810190838211818310171562000504576200050462000310565b8160405282815288868487010111156200051d57600080fd5b600093505b8284101562000541578484018601518185018701529285019262000522565b600086848301015280965050505050505092915050565b6000602082840312156200056b57600080fd5b81516001600160a01b03811681146200058357600080fd5b9392505050565b80820180821115620005ac57634e487b7160e01b600052601160045260246000fd5b92915050565b6108e780620005c26000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806306fdde03146100bf578063095ea7b3146100dd57806318160ddd1461010057806323b872dd14610112578063313ce5671461012557806342966c681461013457806370a0823114610149578063715018a61461017257806379cc67901461017a5780638da5cb5b1461018d57806395d89b41146101a6578063a9059cbb146101ae578063dd62ed3e146101c1578063f2fde38b146101d4575b600080fd5b6100c76101e7565b6040516100d491906106e2565b60405180910390f35b6100f06100eb36600461074d565b610279565b60405190151581526020016100d4565b6002545b6040519081526020016100d4565b6100f0610120366004610777565b610293565b604051601281526020016100d4565b6101476101423660046107b3565b6102b7565b005b6101046101573660046107cc565b6001600160a01b031660009081526020819052604090205490565b6101476102c4565b61014761018836600461074d565b6102d8565b6005546001600160a01b03166040516100d491906107ee565b6100c76102f1565b6100f06101bc36600461074d565b610300565b6101046101cf366004610802565b61030e565b6101476101e23660046107cc565b610339565b6060600380546101f690610835565b80601f016020809104026020016040519081016040528092919081815260200182805461022290610835565b801561026f5780601f106102445761010080835404028352916020019161026f565b820191906000526020600020905b81548152906001019060200180831161025257829003601f168201915b5050505050905090565b60003361028781858561037d565b60019150505b92915050565b6000336102a185828561038f565b6102ac8585856103e2565b506001949350505050565b6102c13382610441565b50565b6102cc610477565b6102d660006104a4565b565b6102e382338361038f565b6102ed8282610441565b5050565b6060600480546101f690610835565b6000336102878185856103e2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610341610477565b6001600160a01b038116610374576000604051631e4fbdf760e01b815260040161036b91906107ee565b60405180910390fd5b6102c1816104a4565b61038a83838360016104f6565b505050565b600061039b848461030e565b905060001981146103dc57818110156103cd57828183604051637dc7a0d960e11b815260040161036b9392919061086f565b6103dc848484840360006104f6565b50505050565b6001600160a01b03831661040c576000604051634b637e8f60e11b815260040161036b91906107ee565b6001600160a01b03821661043657600060405163ec442f0560e01b815260040161036b91906107ee565b61038a8383836105cb565b6001600160a01b03821661046b576000604051634b637e8f60e11b815260040161036b91906107ee565b6102ed826000836105cb565b6005546001600160a01b031633146102d6573360405163118cdaa760e01b815260040161036b91906107ee565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661052057600060405163e602df0560e01b815260040161036b91906107ee565b6001600160a01b03831661054a576000604051634a1406b160e11b815260040161036b91906107ee565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156103dc57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105bd91815260200190565b60405180910390a350505050565b6001600160a01b0383166105f65780600260008282546105eb9190610890565b909155506106559050565b6001600160a01b038316600090815260208190526040902054818110156106365783818360405163391434e360e21b815260040161036b9392919061086f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661067157600280548290039055610690565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106d591815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b81811015610710578581018301518582016040015282016106f4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461074857600080fd5b919050565b6000806040838503121561076057600080fd5b61076983610731565b946020939093013593505050565b60008060006060848603121561078c57600080fd5b61079584610731565b92506107a360208501610731565b9150604084013590509250925092565b6000602082840312156107c557600080fd5b5035919050565b6000602082840312156107de57600080fd5b6107e782610731565b9392505050565b6001600160a01b0391909116815260200190565b6000806040838503121561081557600080fd5b61081e83610731565b915061082c60208401610731565b90509250929050565b600181811c9082168061084957607f821691505b60208210810361086957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b039390931683526020830191909152604082015260600190565b8082018082111561028d57634e487b7160e01b600052601160045260246000fdfea264697066735822122000fe1934ead50cfe2be5fed6a5ccd01cfc6dbb8ee2d9044c717b61eb98a80b1164736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class DummyTokenOwnable__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.DummyTokenOwnable__factory = DummyTokenOwnable__factory;
DummyTokenOwnable__factory.bytecode = _bytecode;
DummyTokenOwnable__factory.abi = _abi;
