"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IEntanglementMgr__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "calculateEntanglementWallet",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "entangler",
                type: "bytes32",
            },
        ],
        name: "capacityOfEntangler",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "capcityOfStaker",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "entangler",
                type: "bytes32",
            },
        ],
        name: "entanglerToStaker",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "settlementId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "findSettler",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "depositAmount",
                type: "uint256",
            },
        ],
        name: "getDepositAddress",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "settlementId",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "btcTransactionHash",
                type: "bytes32",
            },
        ],
        name: "registerExecution",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "toAddress",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "requestSettlement",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "requestedSettler",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "settlementId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
            },
        ],
        name: "selectSettler",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "settlementId",
                type: "bytes32",
            },
        ],
        name: "settlementStatus",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "settlementId",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "btcTransactionHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "settler",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "complete",
                        type: "bool",
                    },
                ],
                internalType: "struct IEntanglementMgr.SettlementInfo",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "stakeBtc",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "stakerToEngangler",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "entangler",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "entangledBalance",
                type: "uint256",
            },
        ],
        name: "updateCapacity",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IEntanglementMgr__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IEntanglementMgr__factory = IEntanglementMgr__factory;
IEntanglementMgr__factory.abi = _abi;
