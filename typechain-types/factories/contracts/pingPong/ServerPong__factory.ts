/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ServerPong,
  ServerPongInterface,
} from "../../../contracts/pingPong/ServerPong";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotClient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numbPongs",
        type: "uint256",
      },
    ],
    name: "Pong",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "initializeWithQp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numbPongs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pong",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remotePeers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "chainIds",
        type: "uint256[]",
      },
    ],
    name: "removeRemotePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    name: "updateFeeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "updatePortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "chainIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "remotes",
        type: "address[]",
      },
    ],
    name: "updateRemotePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca9380380610ca983398101604081905261002f916100d3565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610083565b50600280546001600160a01b0319166001600160a01b0384161790556004555061010d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100e657600080fd5b82516001600160a01b03811681146100fd57600080fd5b6020939093015192949293505050565b610b8d8061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806339d4ce0d146100ca5780636425666b146100df57806369e15404146101085780636c6bde881461011f578063704b6c0214610132578063715018a61461014557806371f4ba341461014d5780638da5cb5b146101605780639ea55bb014610168578063aab4ac141461017b578063b58e3c2e1461018e578063bc9748a1146101b7578063dc7f19c0146101bf578063f2fde38b146101df578063f851a440146101f2575b600080fd5b6100dd6100d836600461090c565b610205565b005b6002546100f2906001600160a01b031681565b6040516100ff919061094d565b60405180910390f35b61011160045481565b6040519081526020016100ff565b6100dd61012d366004610961565b610262565b6100dd6101403660046109e1565b6103c1565b6100dd61041f565b6100dd61015b3660046109e1565b610433565b6100f261045d565b6100dd610176366004610a05565b61046c565b6100dd6101893660046109e1565b610479565b6100f261019c366004610a05565b6003602052600090815260409020546001600160a01b031681565b6100dd61048d565b6101116101cd366004610a05565b60056020526000908152604090205481565b6100dd6101ed3660046109e1565b610804565b6001546100f2906001600160a01b031681565b61020d61083f565b60005b8181101561025d576003600084848481811061022e5761022e610a1e565b6020908102929092013583525081019190915260400160002080546001600160a01b0319169055600101610210565b505050565b61026a61083f565b8281146102ba5760405162461bcd60e51b81526020600482015260196024820152785752503a2077726f6e67206e6f2e206f662072656d6f74657360381b60448201526064015b60405180910390fd5b60005b838110156103ba5760008383838181106102d9576102d9610a1e565b90506020020160208101906102ee91906109e1565b6001600160a01b03160361033e5760405162461bcd60e51b815260206004820152601760248201527615d4940e881c995b5bdd19481a5cc81c995c5d5a5c9959604a1b60448201526064016102b1565b82828281811061035057610350610a1e565b905060200201602081019061036591906109e1565b6003600087878581811061037b5761037b610a1e565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b03929092169190911790556001016102bd565b5050505050565b6103c961083f565b600180546001600160a01b0319166001600160a01b0383161790556040517f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9061041490839061094d565b60405180910390a150565b61042761083f565b6104316000610871565b565b61043b61083f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b61047461083f565b600455565b61048161083f565b61048a8161043b565b50565b6002546001600160a01b031633146104d55760405162461bcd60e51b815260206004820152600b60248201526a13db9b1e481c1bdc9d185b60aa1b60448201526064016102b1565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610a34565b5060008281526003602052604090205491935091506001600160a01b0380831691161461058f57604051630836f21d60e21b815260040160405180910390fd5b60008281526005602052604081208054916105a983610a77565b90915550506004541561072b57600260009054906101000a90046001600160a01b03166001600160a01b031663647846a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d9190610a9e565b6001600160a01b031663a9059cbb600260009054906101000a90046001600160a01b03166001600160a01b031663cd3c695a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610a9e565b6004546040518363ffffffff1660e01b81526004016106e69291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107299190610abb565b505b6002546001600160a01b03166359ff51cc838361074661045d565b60405163691799e560e11b60208201526024016040516020818303038152906040526040518563ffffffff1660e01b81526004016107879493929190610add565b600060405180830381600087803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050600083815260056020908152604091829020548251868152918201527fbe86ada7e845dfc570f2151d2ddc339b3fa9cfb9722e7130cdd4b28d30c1049b92500160405180910390a15050565b61080c61083f565b6001600160a01b038116610836576000604051631e4fbdf760e01b81526004016102b1919061094d565b61048a81610871565b3361084861045d565b6001600160a01b031614610431573360405163118cdaa760e01b81526004016102b1919061094d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f8401126108d357600080fd5b5081356001600160401b038111156108ea57600080fd5b6020830191508360208260051b850101111561090557600080fd5b9250929050565b6000806020838503121561091f57600080fd5b82356001600160401b0381111561093557600080fd5b610941858286016108c1565b90969095509350505050565b6001600160a01b0391909116815260200190565b6000806000806040858703121561097757600080fd5b84356001600160401b038082111561098e57600080fd5b61099a888389016108c1565b909650945060208701359150808211156109b357600080fd5b506109c0878288016108c1565b95989497509550505050565b6001600160a01b038116811461048a57600080fd5b6000602082840312156109f357600080fd5b81356109fe816109cc565b9392505050565b600060208284031215610a1757600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600080600060608486031215610a4957600080fd5b835192506020840151610a5b816109cc565b6040850151909250610a6c816109cc565b809150509250925092565b600060018201610a9757634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610ab057600080fd5b81516109fe816109cc565b600060208284031215610acd57600080fd5b815180151581146109fe57600080fd5b6001600160401b03851681526000602060018060a01b03808716602085015280861660408501525060806060840152835180608085015260005b81811015610b335785810183015185820160a001528201610b17565b50600060a0828601015260a0601f19601f830116850101925050509594505050505056fea26469706673582212207ac8c30344b540dfd7777edc34c67f5d1a95565a162209fed3e0cfcaf9e5be6364736f6c63430008180033";

type ServerPongConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ServerPongConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ServerPong__factory extends ContractFactory {
  constructor(...args: ServerPongConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _portal: AddressLike,
    _feeAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_portal, _feeAmount, overrides || {});
  }
  override deploy(
    _portal: AddressLike,
    _feeAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_portal, _feeAmount, overrides || {}) as Promise<
      ServerPong & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ServerPong__factory {
    return super.connect(runner) as ServerPong__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ServerPongInterface {
    return new Interface(_abi) as ServerPongInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ServerPong {
    return new Contract(address, _abi, runner) as unknown as ServerPong;
  }
}
