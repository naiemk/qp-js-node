/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Ping, PingInterface } from "../../../contracts/pingPong/Ping";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotRemotePeer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "numbPingsSent",
        type: "uint256",
      },
    ],
    name: "Ping",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "numbPingsReceived",
        type: "uint256",
      },
    ],
    name: "ReceivePing",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "initializeWithQp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numbPingsReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numbPingsSent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "ping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receivePing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remotePeers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "chainIds",
        type: "uint256[]",
      },
    ],
    name: "removeRemotePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    name: "updateFeeAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "updatePortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "chainIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "remotes",
        type: "address[]",
      },
    ],
    name: "updateRemotePeers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e14380380610e1483398101604081905261002f916100d3565b328061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610083565b50600280546001600160a01b0319166001600160a01b0384161790556006555061010d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100e657600080fd5b82516001600160a01b03811681146100fd57600080fd5b6020939093015192949293505050565b610cf88061011c6000396000f3fe6080604052600436106100de5760003560e01c8063773acdef11610085578063773acdef146101e65780638da5cb5b146101f95780639ea55bb01461020e578063aab4ac141461022e578063b58e3c2e1461024e578063c174c2f714610284578063edb88e6b14610299578063f2fde38b146102af578063f851a440146102cf57600080fd5b8063014e9312146100e357806339d4ce0d1461010c5780636425666b1461012e57806369e154041461015b5780636c6bde8814610171578063704b6c0214610191578063715018a6146101b157806371f4ba34146101c6575b600080fd5b3480156100ef57600080fd5b506100f960055481565b6040519081526020015b60405180910390f35b34801561011857600080fd5b5061012c610127366004610a6e565b6102ef565b005b34801561013a57600080fd5b5060025461014e906001600160a01b031681565b6040516101039190610aaf565b34801561016757600080fd5b506100f960065481565b34801561017d57600080fd5b5061012c61018c366004610ac3565b61034c565b34801561019d57600080fd5b5061012c6101ac366004610b43565b6104ab565b3480156101bd57600080fd5b5061012c610509565b3480156101d257600080fd5b5061012c6101e1366004610b43565b61051d565b61012c6101f4366004610b67565b610547565b34801561020557600080fd5b5061014e610828565b34801561021a57600080fd5b5061012c610229366004610b67565b610837565b34801561023a57600080fd5b5061012c610249366004610b43565b610844565b34801561025a57600080fd5b5061014e610269366004610b67565b6003602052600090815260409020546001600160a01b031681565b34801561029057600080fd5b5061012c610858565b3480156102a557600080fd5b506100f960045481565b3480156102bb57600080fd5b5061012c6102ca366004610b43565b610966565b3480156102db57600080fd5b5060015461014e906001600160a01b031681565b6102f76109a1565b60005b81811015610347576003600084848481811061031857610318610b80565b6020908102929092013583525081019190915260400160002080546001600160a01b03191690556001016102fa565b505050565b6103546109a1565b8281146103a45760405162461bcd60e51b81526020600482015260196024820152785752503a2077726f6e67206e6f2e206f662072656d6f74657360381b60448201526064015b60405180910390fd5b60005b838110156104a45760008383838181106103c3576103c3610b80565b90506020020160208101906103d89190610b43565b6001600160a01b0316036104285760405162461bcd60e51b815260206004820152601760248201527615d4940e881c995b5bdd19481a5cc81c995c5d5a5c9959604a1b604482015260640161039b565b82828281811061043a5761043a610b80565b905060200201602081019061044f9190610b43565b6003600087878581811061046557610465610b80565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b03929092169190911790556001016103a7565b5050505050565b6104b36109a1565b600180546001600160a01b0319166001600160a01b0383161790556040517f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c906104fe908390610aaf565b60405180910390a150565b6105116109a1565b61051b60006109d3565b565b6105256109a1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b346000036106c357600260009054906101000a90046001600160a01b03166001600160a01b031663647846a56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c69190610b96565b6001600160a01b031663a9059cbb600260009054906101000a90046001600160a01b03166001600160a01b031663cd3c695a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b9190610b96565b6006546040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd9190610bb3565b506107e0565b6002546000828152600360205260409020546001600160a01b039182169163b926485a9134918591166106f4610828565b600260009054906101000a90046001600160a01b03166001600160a01b031663647846a56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610b96565b60405163c174c2f760e01b60208201526024016040516020818303038152906040526040518763ffffffff1660e01b81526004016107ad959493929190610bd5565b6000604051808303818588803b1580156107c657600080fd5b505af11580156107da573d6000803e3d6000fd5b50505050505b600480549060006107f083610c58565b91905055507f48257dc961b6f792c2b78a080dacfed693b660960a702de21cee364e20270e2f6004546040516104fe91815260200190565b6000546001600160a01b031690565b61083f6109a1565b600655565b61084c6109a1565b61085581610525565b50565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d29190610c7f565b5060008281526003602052604090205491935091506001600160a01b038083169116146109125760405163bd42142960e01b815260040160405180910390fd5b6005805490600061092283610c58565b91905055507f93f59312d791dd925489d6cef97e6e308e5a628ed35691c1bc0b4c14ef56f97660055460405161095a91815260200190565b60405180910390a15050565b61096e6109a1565b6001600160a01b038116610998576000604051631e4fbdf760e01b815260040161039b9190610aaf565b610855816109d3565b336109aa610828565b6001600160a01b03161461051b573360405163118cdaa760e01b815260040161039b9190610aaf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f840112610a3557600080fd5b5081356001600160401b03811115610a4c57600080fd5b6020830191508360208260051b8501011115610a6757600080fd5b9250929050565b60008060208385031215610a8157600080fd5b82356001600160401b03811115610a9757600080fd5b610aa385828601610a23565b90969095509350505050565b6001600160a01b0391909116815260200190565b60008060008060408587031215610ad957600080fd5b84356001600160401b0380821115610af057600080fd5b610afc88838901610a23565b90965094506020870135915080821115610b1557600080fd5b50610b2287828801610a23565b95989497509550505050565b6001600160a01b038116811461085557600080fd5b600060208284031215610b5557600080fd5b8135610b6081610b2e565b9392505050565b600060208284031215610b7957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ba857600080fd5b8151610b6081610b2e565b600060208284031215610bc557600080fd5b81518015158114610b6057600080fd5b6001600160401b03861681526000602060018060a01b038088166020850152808716604085015280861660608501525060a0608084015283518060a085015260005b81811015610c335785810183015185820160c001528201610c17565b50600060c0828601015260c0601f19601f830116850101925050509695505050505050565b600060018201610c7857634e487b7160e01b600052601160045260246000fd5b5060010190565b600080600060608486031215610c9457600080fd5b835192506020840151610ca681610b2e565b6040850151909250610cb781610b2e565b80915050925092509256fea2646970667358221220af2db71bdaa49141b3432891f5b97445c3c61b455b90fcb74e2fd4af0320d45564736f6c63430008180033";

type PingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ping__factory extends ContractFactory {
  constructor(...args: PingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _portal: AddressLike,
    _feeAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_portal, _feeAmount, overrides || {});
  }
  override deploy(
    _portal: AddressLike,
    _feeAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_portal, _feeAmount, overrides || {}) as Promise<
      Ping & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ping__factory {
    return super.connect(runner) as Ping__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PingInterface {
    return new Interface(_abi) as PingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ping {
    return new Contract(address, _abi, runner) as unknown as Ping;
  }
}
