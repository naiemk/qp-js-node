/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOperatorRelation,
  IOperatorRelationInterface,
} from "../../../../../../contracts/quantumPortal/poc/poa/stake/IOperatorRelation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeOperator",
        type: "address",
      },
    ],
    name: "getDelegateForOperator",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "deleted",
            type: "uint8",
          },
        ],
        internalType: "struct IOperatorRelation.Relationship",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IOperatorRelation__factory {
  static readonly abi = _abi;
  static createInterface(): IOperatorRelationInterface {
    return new Interface(_abi) as IOperatorRelationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOperatorRelation {
    return new Contract(address, _abi, runner) as unknown as IOperatorRelation;
  }
}
