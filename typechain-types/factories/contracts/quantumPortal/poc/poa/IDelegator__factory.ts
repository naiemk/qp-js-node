/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDelegator,
  IDelegatorInterface,
} from "../../../../../contracts/quantumPortal/poc/poa/IDelegator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "getReverseDelegation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegatee",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "deleted",
            type: "uint8",
          },
        ],
        internalType: "struct IDelegator.ReverseDelegation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IDelegator__factory {
  static readonly abi = _abi;
  static createInterface(): IDelegatorInterface {
    return new Interface(_abi) as IDelegatorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IDelegator {
    return new Contract(address, _abi, runner) as unknown as IDelegator;
  }
}
