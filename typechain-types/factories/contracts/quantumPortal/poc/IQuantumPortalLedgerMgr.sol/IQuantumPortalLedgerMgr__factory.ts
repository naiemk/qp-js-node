/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IQuantumPortalLedgerMgr,
  IQuantumPortalLedgerMgrInterface,
} from "../../../../../contracts/quantumPortal/poc/IQuantumPortalLedgerMgr.sol/IQuantumPortalLedgerMgr";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "remoteChainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "remoteContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "method",
        type: "bytes",
      },
    ],
    name: "registerTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "minedOnChainId",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "localBlockNonce",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "localBlockTimestamp",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "remoteContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "sourceMsgSender",
            type: "address",
          },
          {
            internalType: "address",
            name: "sourceBeneficiary",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes[]",
            name: "methods",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedFee",
            type: "uint256",
          },
        ],
        internalType: "struct QuantumPortalLib.RemoteTransaction[]",
        name: "transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "expiry",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "multiSignature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "rewardReceiver",
        type: "address",
      },
    ],
    name: "submitFraudProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IQuantumPortalLedgerMgr__factory {
  static readonly abi = _abi;
  static createInterface(): IQuantumPortalLedgerMgrInterface {
    return new Interface(_abi) as IQuantumPortalLedgerMgrInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IQuantumPortalLedgerMgr {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IQuantumPortalLedgerMgr;
  }
}
