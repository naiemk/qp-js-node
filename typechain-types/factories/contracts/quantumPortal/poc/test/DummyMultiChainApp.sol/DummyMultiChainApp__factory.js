"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DummyMultiChainApp__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_portal",
                type: "address",
            },
            {
                internalType: "address",
                name: "_mgr",
                type: "address",
            },
            {
                internalType: "address",
                name: "_feeToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "target",
                type: "address",
            },
        ],
        name: "AddressEmptyCode",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "AddressInsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "FailedInnerCall",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "SafeERC20FailedOperation",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "remoteChainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "remoteContract",
                type: "address",
            },
            {
                internalType: "address",
                name: "beneficiary",
                type: "address",
            },
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "callOnRemote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "feeToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "mgr",
        outputs: [
            {
                internalType: "contract QuantumPortalLedgerMgrUpgradeable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "portal",
        outputs: [
            {
                internalType: "contract QuantumPortalPocUpgradeable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "receiveCall",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50604051610bc3380380610bc383398101604081905261002f9161008d565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d0565b80516001600160a01b038116811461008857600080fd5b919050565b6000806000606084860312156100a257600080fd5b6100ab84610071565b92506100b960208501610071565b91506100c760408501610071565b90509250925092565b610ae4806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636425666b1461005c578063647846a51461008557806370c85d46146100985780638c9afac7146100ab5780639cc8dc4b146100c0575b600080fd5b60005461006f906001600160a01b031681565b60405161007c91906107b8565b60405180910390f35b60025461006f906001600160a01b031681565b60015461006f906001600160a01b031681565b6100be6100b93660046107e1565b6100c8565b005b6100be61040a565b6040805160048082526024820183526020820180516001600160e01b0316639cc8dc4b60e01b1790526001548251935163046a328560e41b815292936000936001600160a01b03909216926346a3285092610130928c92909101918252602082015260400190565b602060405180830381865afa15801561014d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610171919061083c565b90506101a56040518060400160405280601181526020017022b9ba34b6b0ba34b7339033b0b997171760791b8152506104c9565b60005a600054604051633c95154960e21b81529192506001600160a01b03169063f2545524906101e5908b90309081908c908a908d908d906004016108a5565b600060405180830381600087803b1580156101ff57600080fd5b505af1158015610213573d6000803e3d6000fd5b5050505060005a6102249083610908565b905061025e6040518060400160405280601781526020017622b9ba34b6b0ba34b7339033b0b9971717102237b7329760491b8152506104c9565b6000546040805163669e34ad60e11b815290516102ea926001600160a01b03169163cd3c695a9160048083019260209291908290030181865afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd919061091b565b6102d78386610938565b6002546001600160a01b0316919061050f565b60408051808201909152600a815269029b2b73a103332b29d160b51b602082015261031e906103198386610938565b610561565b600054610338906001600160a01b0388811691168761050f565b6103676040518060400160405280600d81526020016c029b2b73a1030b6b7bab73a1d1609d1b81525086610561565b60005460405163801c6d1560e01b81526001600160a01b039091169063801c6d159061039f908c908c908c908c908b9060040161094b565b600060405180830381600087803b1580156103b957600080fd5b505af11580156103cd573d6000803e3d6000fd5b505050506103ff6040518060400160405280600d81526020016c2932b6b7ba3290393ab717171760991b8152506104c9565b505050505050505050565b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610485919061099a565b925092509250600354600161049a9190610938565b6003819055506104c4604051806060016040528060258152602001610a8a602591398484846105aa565b505050565b61050c816040516024016104dd91906109dd565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526105f9565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104c4908490610602565b6105a682826040516024016105779291906109f0565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526105f9565b5050565b6105f3848484846040516024016105c49493929190610a12565b60408051601f198184030181529190526020810180516001600160e01b0316632f515bd760e11b1790526105f9565b50505050565b61050c81610665565b60006106176001600160a01b03841683610686565b9050805160001415801561063c57508080602001905181019061063a9190610a4b565b155b156104c45782604051635274afe760e01b815260040161065c91906107b8565b60405180910390fd5b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60606106948383600061069d565b90505b92915050565b6060814710156106c2573060405163cd78605960e01b815260040161065c91906107b8565b600080856001600160a01b031684866040516106de9190610a6d565b60006040518083038185875af1925050503d806000811461071b576040519150601f19603f3d011682016040523d82523d6000602084013e610720565b606091505b509150915061073086838361073c565b925050505b9392505050565b6060826107515761074c8261078f565b610735565b815115801561076857506001600160a01b0384163b155b156107885783604051639996b31560e01b815260040161065c91906107b8565b5080610735565b80511561079f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b0391909116815260200190565b6001600160a01b038116811461050c57600080fd5b600080600080600060a086880312156107f957600080fd5b85359450602086013561080b816107cc565b9350604086013561081b816107cc565b9250606086013561082b816107cc565b949793965091946080013592915050565b60006020828403121561084e57600080fd5b5051919050565b60005b83811015610870578181015183820152602001610858565b50506000910152565b60008151808452610891816020860160208601610855565b601f01601f19169290920160200192915050565b878152600060018060a01b0380891660208401528088166040840152808716606084015260e060808401526108dd60e0840187610879565b941660a08301525060c0015295945050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610697576106976108f2565b60006020828403121561092d57600080fd5b8151610735816107cc565b80820180821115610697576106976108f2565b67ffffffffffffffff861681526001600160a01b03858116602083015284811660408301528316606082015260a06080820181905260009061098f90830184610879565b979650505050505050565b6000806000606084860312156109af57600080fd5b8351925060208401516109c1816107cc565b60408501519092506109d2816107cc565b809150509250925092565b6020815260006106946020830184610879565b604081526000610a036040830185610879565b90508260208301529392505050565b608081526000610a256080830187610879565b6020830195909552506001600160a01b0392831660408201529116606090910152919050565b600060208284031215610a5d57600080fd5b8151801515811461073557600080fd5b60008251610a7f818460208701610855565b919091019291505056fe44756d6d794d756c7469436861696e4170703a2052656d6f7465206d73672063616c6c6564a26469706673582212203d04fcf2ff496181919e6e4bf28d51543e15b22cbb646fcc75021c6916dc7cfb64736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class DummyMultiChainApp__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_portal, _mgr, _feeToken, overrides) {
        return super.getDeployTransaction(_portal, _mgr, _feeToken, overrides || {});
    }
    deploy(_portal, _mgr, _feeToken, overrides) {
        return super.deploy(_portal, _mgr, _feeToken, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.DummyMultiChainApp__factory = DummyMultiChainApp__factory;
DummyMultiChainApp__factory.bytecode = _bytecode;
DummyMultiChainApp__factory.abi = _abi;
